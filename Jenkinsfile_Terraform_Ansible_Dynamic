pipeline {
    agent {label 'ansible'}

    /* 
        Make sure u have terraform installed Directly on the Jenkins(Salve) or 
        define Terraform as Global Tool by first install terraform plugin. 
    */

    tools {
        terraform 'Terraform'
    }


    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
    }

    stages {
        stage('Git Clone') {
            steps {
                git branch: 'main', credentialsId: 'GithubCred', url: 'https://github.com/abhiGithubIT/student-reg-webapp-ops-repo.git'
            }
        }
        stage('Terraform Apply') {
            steps {
                    sh '''
                        cd terraform
                        terraform version
                        terraform init -input=false -no-color
                        terraform validate -no-color
                        terraform plan -input=false -no-color -out=tfplan 
                        terraform apply -input=false -auto-approve -no-color tfplan    
                        '''
                                
            }
        }
        stage('Run Ansible Playbook') {
            steps {
                withCredentials([file(credentialsId: 'AWSEC2PEM', variable: 'aws_pem_file')]) {
                    sh '''
                        cd ansible-scripts
                        # Display host details using dynamic inventory
                        ansible-inventory -i aws_ec2.yaml --graph
                        ansible -i aws_ec2.yaml _tomcat -m wait_for_connection \
                           -a "timeout=300 delay=5" -u ec2-user -e ansible_ssh_private_key_file=${AWS_PEM_FILE} --ssh-common-args='-o StrictHostKeyChecking=no'
                        # Run the playbook
                        ansible-playbook -i aws_ec2.yaml installTomcat.yaml -e ansible_ssh_private_key_file=${aws_pem_file} --ssh-common-args='-o StrictHostKeyChecking=no'
                    '''
                }
            }
        }
    }
}
